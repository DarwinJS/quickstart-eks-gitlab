AWSTemplateFormatVersion: 2010-09-09
Description: Deploys GitLab cluster (qs-1rpegts6r)

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9002
        - W9003
        - W9004
        - E0002

Parameters:
# Network Parameters
  VPCID: 
    Type: 'AWS::EC2::VPC::Id'
  VPCCIDR:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  PrivateSubnet1ID:
    Type: 'AWS::EC2::Subnet::Id'
  PrivateSubnet2ID:
    Type: 'AWS::EC2::Subnet::Id'
  PrivateSubnet3ID:
    Type: String
    Default: ''
  NodeGroupSecurityGroup: 
    Type: AWS::EC2::SecurityGroup::Id

# Cluster Parameters
  KubeClusterName:
    Type: String

# Database Parameters
  DBEngineVersion:
    AllowedValues: [ '9.6.16', '9.6.17', '9.6.18', '9.6.19', '10.11', '10.12', '10.13', '10.14', '11.6', '11.7', '11.8', '11.9', '12.4']
    MinLength: "4"
    Type: String
  DBName: 
    AllowedPattern: "[a-zA-Z0-9]*"
    MaxLength: "64"
    MinLength: "0"
    Type: String
  DBPraefectName: 
    AllowedPattern: "[a-zA-Z0-9]*"
    MaxLength: "64"
    MinLength: "0"
    Type: String    
  DBUserName: 
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    MaxLength: "16"
    MinLength: "1"
    Type: String
  DBUserPassword:
    AllowedPattern: >-
      ^(?=^.{8,255}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)((?=.*[^A-Za-z0-9])(?!.*[@/"'])).*$
    MaxLength: "64"
    MinLength: "8"
    NoEcho: "True"
    Type: String
  DBPort:
    Type: Number
    MinValue: 1150
    MaxValue: 65535
  DBInstanceClass:
    Type: String
  UsingAurora:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]

# Quickstart location Parameters
  QSS3BucketName:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
  QSS3BucketRegion:
    Type: String
  QSS3KeyPrefix:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z-/]*$

Conditions:
  Using3AvailabilityZones:  !Not [!Equals [!Ref PrivateSubnet3ID, '']]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  UsingAurora: !Equals [!Ref UsingAurora, 'Yes']

Resources:

  AuroraDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: UsingAurora
    # E9101 Ignoring 'master' in Aurora PostgreSQL quickstart parameter names
    Metadata: { cfn-lint: { config: { ignore_checks: [E9101] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-postgresql/templates/aurora_postgres.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AuroraDBEngineVersion: !Ref AuroraDBEngineVersion # GitLab PostgreSQL version mappings https://docs.gitlab.com/omnibus/settings/database.html#gitlab-140-and-later
        DBInstanceClass: !Ref DBInstanceClass
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBUserName
        DBMasterUserPassword: !Ref DBUserPassword
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref PrivateSubnet1ID
        Subnet2ID: !Ref PrivateSubnet2ID
        CustomDBSecurityGroup: !GetAtt Infrastructure.Outputs.DatabaseSecurityGroupID

  RDSDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: !Not UsingAurora
    # E9101 Ignoring 'master' in Aurora PostgreSQL quickstart parameter names
    Metadata: { cfn-lint: { config: { ignore_checks: [ E9101 ] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-rds-postgresql/templates/rds_postgres-main.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        RDSDBEngineVersion: !Ref RDSDBEngineVersion # GitLab PostgreSQL version mappings https://docs.gitlab.com/omnibus/settings/database.html#gitlab-140-and-later
        DBInstanceClass: !Ref DBInstanceClass
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBUserName
        DBMasterUserPassword: !Ref DBUserPassword
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref PrivateSubnet1ID
        Subnet2ID: !Ref PrivateSubnet2ID
        CustomDBSecurityGroup: !GetAtt Infrastructure.Outputs.DatabaseSecurityGroupID

Outputs:
  DBName:
    Description: "Amazon Aurora database name"
    Value: !If [ UsingAurora [ !Ref AuroraDatabase.DBName, !Ref RDSDatabase.DBName ]
  DBMasterUsername:
    Description: "Amazon Aurora database master username"
    Value: !Ref DBMasterUsername
  RDSEndPointAddress:
    Description: "Amazon Aurora write endpoint"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}
  RDSReadEndPointAddress:
    Description: "Amazon Aurora read endpoint"
    Value: !Sub ${AuroraDBCluster.ReadEndpoint.Address}
  RDSEndPointPort:
    Description: "Amazon Aurora port"
    Value: !Sub ${AuroraDBCluster.Endpoint.Port}
  RDSEndPoints:
    Description: "Full Amazon Aurora write endpoint"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}:${AuroraDBCluster.Endpoint.Port}/${DBName}
  RDSEncryptionKey:
    Condition: UseDatabaseEncryption
    Description: The alias of the encryption key created for RDS
    Value: !Ref EncryptionKeyAlias