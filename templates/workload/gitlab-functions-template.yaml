AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Deploys Lambda functions required for the AWS GitLab Quick Start.
  (qs-1rpegts3l)

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9002
        - W9003
        - W9004

Parameters:
  QSS3BucketName:
    Type: String
  QSS3KeyPrefix:
    Type: String

Mappings:
  Config:
    EksPrefix: { Value: eks-quickstart }
    GitLabPrefix: { Value: gitlab-quickstart }

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]

Resources:

  CopyZips:
    Type: Custom::CopyZips
    Properties:
      ServiceToken: !Sub ['arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Prefix}-CopyZips', {Prefix: !FindInMap [Config, EksPrefix, Value]}]
      DestBucket: !Sub ['${Prefix}-lambdazips-${AWS::Region}-${AWS::AccountId}', {Prefix: !FindInMap [Config, EksPrefix, Value]}]
      SourceBucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Prefix: !Ref QSS3KeyPrefix
      Objects:
        - functions/packages/CfnSesDomain/lambda.zip
        - functions/packages/CleanupACMDNSValidation/lambda.zip
        - functions/packages/RandomString/lambda.zip
        - functions/packages/SmtpPasswordGenerator/lambda.zip
        - functions/packages/UpdateDnsRecord/lambda.zip

  RandomStringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AssumeLambdaExecutionRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  RandomStringFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Generates a random string.
      Handler: index.handler
      Timeout: 30
      Role: !GetAtt RandomStringRole.Arn
      Runtime: python3.9
      Code:
        S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        S3Key: !Sub ${QSS3KeyPrefix}functions/packages/RandomString/lambda.zip

Outputs:
  FunctionsBucketName:
    Value: !Sub ['${Prefix}-lambdazips-${AWS::Region}-${AWS::AccountId}', {Prefix: !FindInMap [Config, EksPrefix, Value]}]
  RandomStringFunctionArn:
    Value: !GetAtt RandomStringFunction.Arn
