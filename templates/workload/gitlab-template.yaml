AWSTemplateFormatVersion: 2010-09-09
Description: Gitlab s3 Buckets

Parameters:
# Infra Parameters
  DomainName:
    Type: String
  RealDomainName:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]
  CreateHostedZone:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]
  CreateEmailDomain:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]
  CreateSslCertificate:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]

# Network Parameters
  VPCID: 
    Type: 'AWS::EC2::VPC::Id'
  VPCCIDR:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  PrivateSubnet1ID:
    Type: 'AWS::EC2::Subnet::Id'
  PrivateSubnet2ID:
    Type: 'AWS::EC2::Subnet::Id'

# Cluster Parameters
  KubeClusterName:
    Type: String
  ConfigureContainerInsights:
    Type: String
    AllowedValues: [ 'Yes', 'No' ]
    Default: 'No'

# Databse Parameters
  DBName: 
    AllowedPattern: "[a-zA-Z0-9]*"
    MaxLength: "64"
    MinLength: "0"
    Type: String
  DBPraefectName: 
    AllowedPattern: "[a-zA-Z0-9]*"
    MaxLength: "64"
    MinLength: "0"
    Type: String    
  DBUserName: 
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    MaxLength: "16"
    MinLength: "1"
    Type: String
  DBUserPassword:
    AllowedPattern: >-
      ^(?=^.{8,255}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)((?=.*[^A-Za-z0-9])(?!.*[@/"'])).*$
    MaxLength: "64"
    MinLength: "8"
    NoEcho: "True"
    Type: String
  DBPort:
    Type: Number
    MinValue: 1150
    MaxValue: 65535

# Object Storage Parameters
  ObjectStorageSSEAlgorithm:
    Type: String
    AllowedValues: [ 'AES256', 'aws:kms' ]
  ObjectStorageKMSKeyID:
    Type: String

# GitLab Parameters
  HelmChartName:
    Type: String
  HelmChartNamespace:
    Type: String
  HelmChartVersion:
    Type: String
  BackupSchedule:
    Type: String
  NumberOfGitalyReplicas:
    Type: Number

# Quickstart location Parameters
  QSS3BucketName:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: aws-quickstart
  QSS3BucketRegion:
    Type: String
    Default: 'us-east-1'
  QSS3KeyPrefix:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    Default: quickstart-examples/

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  TelemetryRequired: !Equals [!Ref ConfigureContainerInsights, 'Yes']
  # RealDomainNameProvided: !Equals [!Ref RealDomainName, 'Yes']

Resources:

  Functions: 
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-functions-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters: 
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  Telemetry: 
    Type: AWS::CloudFormation::Stack
    Condition: TelemetryRequired
    Properties: 
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-telemetry-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters: 
        ClusterName: !Ref KubeClusterName

  Infrastructure:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-infra-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPCID: !Ref VPCID
        DBPort: !Ref DBPort
        DBAccessCIDR: !Ref VPCCIDR
        DomainName: !Ref DomainName
        CreateHostedZone: !Ref CreateHostedZone
        CreateEmailDomain: !Ref CreateEmailDomain
        CreateSslCertificate: !Ref CreateSslCertificate
        FunctionsBucketName: !GetAtt Functions.Outputs.FunctionsBucketName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion

  Database:
    Type: AWS::CloudFormation::Stack
    # E9101 Ignoring 'master' in Aurora PostgreSQL quickstart parameter names
    Metadata: { cfn-lint: { config: { ignore_checks: [E9101] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-postgresql/templates/aurora_postgres.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBEngineVersion: 11.7 # GitLab requires >= 11
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBUserName
        DBMasterUserPassword: !Ref DBUserPassword
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref PrivateSubnet1ID
        Subnet2ID: !Ref PrivateSubnet2ID
        CustomDBSecurityGroup: !GetAtt Infrastructure.Outputs.DatabaseSecurityGroupID

  PraefectDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-praefect-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBHost: !GetAtt Database.Outputs.RDSEndPointAddress
        DBName: !Ref DBPraefectName
        DBUserName: !Ref DBUserName
        DBUserPassword: !Ref DBUserPassword
        DBPrivateSubnet1ID: !Ref PrivateSubnet1ID
        DBPrivateSubnet2ID: !Ref PrivateSubnet2ID
        DBSecurityGroup: !GetAtt Infrastructure.Outputs.DatabaseSecurityGroupID
        FunctionsBucketName: !GetAtt Functions.Outputs.FunctionsBucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  ObjectStorage:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-storage-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        SSEAlgorithm: !Ref ObjectStorageSSEAlgorithm
        KMSKeyID: !Ref ObjectStorageKMSKeyID

  KubeSecrets:
    Type: AWS::CloudFormation::Stack
    DependsOn: Database
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-secrets-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        KubeClusterName: !Ref KubeClusterName
        HelmChartNamespace: !Ref HelmChartNamespace
        DatabasePassword: !Ref DBUserPassword
        StorageAccessKeyId: !Sub "{{resolve:secretsmanager:${ObjectStorage.Outputs.CredentialsSecretName}:SecretString:accessKeyId}}"
        StorageSecretAccessKey: !Sub "{{resolve:secretsmanager:${ObjectStorage.Outputs.CredentialsSecretName}:SecretString:secretAccessKey}}"
        RegistryBucket: !GetAtt ObjectStorage.Outputs.RegistryBucket

  Chart:
    Type: AWSQS::Kubernetes::Helm   
    DependsOn: PraefectDatabase
    # E3001 Invalid or unsupported Type AWSQS::Kubernetes::Helm
    Metadata: { cfn-lint: { config: { ignore_checks: [E3001] } } }
    Properties:
      ClusterID: !Ref KubeClusterName 
      Namespace: !Ref HelmChartNamespace
      Repository: https://charts.gitlab.io/
      Chart: gitlab/gitlab 
      Name: !Ref HelmChartName
      Version: !Ref HelmChartVersion
      Values:
        certmanager-issuer.email: kolomiets@gmail.com
        # certmanager.install: false

        # domain name
        global.hosts.domain: !Ref DomainName

        # runner configuration
        gitlab-runner.install: false

        # database configuration
        postgresql.install: false
        global.psql.host: !GetAtt Database.Outputs.RDSEndPointAddress
        global.psql.database: !Ref DBName
        global.psql.username: !Ref DBUserName
        global.psql.password.secret: !GetAtt KubeSecrets.Outputs.DatabaseKubeSecretName
        global.psql.password.key: !GetAtt KubeSecrets.Outputs.DatabaseSecretKey

        # Gitaly configuration
        global.praefect.enabled: true
        global.praefect.gitalyReplicas: !Ref NumberOfGitalyReplicas
        global.praefect.dbSecret.secret: !GetAtt KubeSecrets.Outputs.DatabaseKubeSecretName
        global.praefect.dbSecret.key: !GetAtt KubeSecrets.Outputs.DatabaseSecretKey
        global.praefect.psql.host: !GetAtt Database.Outputs.RDSEndPointAddress
        global.praefect.psql.user: !Ref DBUserName
        global.praefect.psql.dbName: !Ref DBPraefectName

        # S3 storage configuration
        ## object storage
        global.minio.enabled: false
        global.appConfig.object_store.enabled: true
        global.appConfig.object_store.proxy_download: true
        global.appConfig.object_store.storage_options.server_side_encryption: AES256
        global.appConfig.object_store.connection.secret: !GetAtt KubeSecrets.Outputs.ObjectStorageKubeSecretName
        global.appConfig.object_store.connection.key: !GetAtt KubeSecrets.Outputs.ConnectionSecretKey
        global.appConfig.artifacts.bucket: !GetAtt ObjectStorage.Outputs.ArtifactsBucket
        global.appConfig.lfs.bucket: !GetAtt ObjectStorage.Outputs.LfsBucket
        global.appConfig.uploads.bucket: !GetAtt ObjectStorage.Outputs.UploadsBucket
        global.appConfig.packages.bucket: !GetAtt ObjectStorage.Outputs.PackagesBucket
        global.appConfig.terraformState.bucket: !GetAtt ObjectStorage.Outputs.TerraformBucket
        global.appConfig.pseudonymizer.bucket: !GetAtt ObjectStorage.Outputs.PseudonymizerBucket
        global.appConfig.backups.bucket: !GetAtt ObjectStorage.Outputs.BuckupBucket
        global.appConfig.backups.tmpBucket: !GetAtt ObjectStorage.Outputs.BuckupTempBucket
        ## registry
        global.registry.bucket: !GetAtt ObjectStorage.Outputs.RegistryBucket
        registry.storage.secret: !GetAtt KubeSecrets.Outputs.ObjectStorageKubeSecretName
        registry.storage.key: !GetAtt KubeSecrets.Outputs.RegistrySecretKey

        # backups, see https://docs.gitlab.com/charts/backup-restore/backup.html
        gitlab.task-runner.backups.cron.enabled: true
        gitlab.task-runner.backups.cron.schedule: !Sub '${BackupSchedule}'
        gitlab.task-runner.backups.objectStorage.config.secret: !GetAtt KubeSecrets.Outputs.ObjectStorageKubeSecretName
        gitlab.task-runner.backups.objectStorage.config.key: !GetAtt KubeSecrets.Outputs.BackupSecretKey

  PostInstall: 
    Type: AWS::CloudFormation::Stack
    DependsOn: Chart
    Properties: 
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workload/gitlab-postinstall-template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters: 
        ClusterName: !Ref KubeClusterName