AWSTemplateFormatVersion: 2010-09-09
Description: Deploys Gitlab S3 buckets. (qs-1rpegts5o)

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9002
        - W9003
        - W9004
        - E0002

Parameters:
  SSEAlgorithm:
    Type: String
    Default: AES256
    AllowedValues: [AES256, aws:kms]
  KMSKeyID:
    Type: String
    AllowedPattern: ^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}|$
    ConstraintDescription: Must be a valid KMS key ID.
    Default: ''
  EnvironmentName:
    Type: String
  HelmChartNamespace:
    Type: String
  OIDCIssuerURLWithoutProtocol:
    Type: String
  DeleteBucketContentsFunctionArn:
    Type: String
  DeleteBucketContentsRoleName:
    Type: String

Conditions:
  UseKMS: !Equals [!Ref SSEAlgorithm, aws:kms]

Resources:

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteArtifactsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref ArtifactsBucket

  LfsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteLfsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref LfsBucket

  UploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteUploadsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref UploadsBucket

  PackagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeletePackagesBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref PackagesBucket

  TerraformBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteTerraformBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref TerraformBucket

  PseudonymizerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeletePseudonymizerBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref PseudonymizerBucket

  RegistryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteRegistryBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref RegistryBucket

  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteBackupBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref BackupBucket

  BackupTempBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref AWS::NoValue]
  DeleteBackupTempBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref BackupTempBucket

  # IAM resources

  DeleteBucketContentsRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref DeleteBucketContentsRoleName
      PolicyName: !Sub ${EnvironmentName}-delete-bucket-contents
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:ListBucketVersions
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${LfsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${UploadsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${PackagesBucket}
              - !Sub arn:${AWS::Partition}:s3:::${TerraformBucket}
              - !Sub arn:${AWS::Partition}:s3:::${PseudonymizerBucket}
              - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}
              - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}
              - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:DeleteObjectVersion
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactsBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${LfsBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${UploadsBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${PackagesBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${TerraformBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${PseudonymizerBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}/*

  ObjectStorageServiceAccountRole:
    Type: AWS::IAM::Role
    Properties:
      # see https://docs.gitlab.com/charts/advanced/external-object-storage/aws-iam-roles.html
      # for the list of storage account names we need to provide S3 permissions to.
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${OIDCIssuerURLWithoutProtocol}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCIssuerURLWithoutProtocol}:sub": [
                    "system:serviceaccount:${HelmChartNamespace}:gitlab-registry",
                    "system:serviceaccount:${HelmChartNamespace}:gitlab-webservice",
                    "system:serviceaccount:${HelmChartNamespace}:gitlab-sidekiq",
                    "system:serviceaccount:${HelmChartNamespace}:gitlab-toolbox"
                  ]
                }
              }
            }
          ]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            # Common object storage permissions
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${ArtifactsBucket}
                - !Sub arn:${AWS::Partition}:s3:::${LfsBucket}
                - !Sub arn:${AWS::Partition}:s3:::${UploadsBucket}
                - !Sub arn:${AWS::Partition}:s3:::${PackagesBucket}
                - !Sub arn:${AWS::Partition}:s3:::${TerraformBucket}
                - !Sub arn:${AWS::Partition}:s3:::${PseudonymizerBucket}
                - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}
                - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}
                - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}
            - Effect: Allow
              Action:
                - s3:*Object
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${ArtifactsBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${LfsBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${UploadsBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${PackagesBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${TerraformBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${PseudonymizerBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}/*
            # Additional registry & backup permissions below
            - Effect: Allow
              Action:
                - s3:GetBucketLocation
                - s3:ListBucketMultipartUploads
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}
                - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}
                - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}
            - Effect: Allow
              Action:
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${RegistryBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${BackupBucket}/*
                - !Sub arn:${AWS::Partition}:s3:::${BackupTempBucket}/*

  ArtifactsBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/artifacts
      Value: !Ref ArtifactsBucket

  LfsBucketBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/lfs
      Value: !Ref LfsBucket

  UploadsBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/uploads
      Value: !Ref UploadsBucket

  PackagesBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/packages
      Value: !Ref PackagesBucket

  TerraformBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/terraform
      Value: !Ref TerraformBucket

  PseudonymizerBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/pseudonymizer
      Value: !Ref PseudonymizerBucket

  RegistryBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/registry
      Value: !Ref RegistryBucket

  BackupBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/backup
      Value: !Ref BackupBucket

  BackupTmpBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/storage/buckets/backup-tmp
      Value: !Ref BackupTempBucket

Outputs:
  ServiceAccountRoleArn:
    Value: !GetAtt ObjectStorageServiceAccountRole.Arn
  ArtifactsBucket:
    Value: !Ref ArtifactsBucket
  LfsBucket:
    Value: !Ref LfsBucket
  UploadsBucket:
    Value: !Ref UploadsBucket
  PackagesBucket:
    Value: !Ref PackagesBucket
  TerraformBucket:
    Value: !Ref TerraformBucket
  PseudonymizerBucket:
    Value: !Ref PseudonymizerBucket
  RegistryBucket:
    Value: !Ref RegistryBucket
  BackupBucket:
    Value: !Ref BackupBucket
  BackupTempBucket:
    Value: !Ref BackupTempBucket
