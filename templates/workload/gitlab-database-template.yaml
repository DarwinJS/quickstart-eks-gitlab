AWSTemplateFormatVersion: 2010-09-09
Description: Deploys GitLab databases. (qs-1skk6s476)

# Lint rules to ignore
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9002
        - W9003
        - W9004

Parameters:

  EnvironmentName:
    Type: String

# Network Parameters
  VPCID:
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  Subnet1ID:
    Type: AWS::EC2::Subnet::Id
  Subnet2ID:
    Type: AWS::EC2::Subnet::Id

# Database Parameters
  AuroraDBEngineVersion:
    Type: String
    MinLength: 4
    AllowedValues: [9.6.16, 9.6.17, 9.6.18, 9.6.19, 10.11, 10.12, 10.13, 10.14, 11.6, 11.7, 11.8, 11.9, 12.4]
  RDSDBEngineVersion:
    Type: String
    MinLength: 4
    AllowedValues:
      - 10.17
      - 10.18
      - 10.19
      - 10.20
      - 10.21
      - 11.12
      - 11.13
      - 11.14
      - 11.15
      - 11.16
      - 12.7
      - 12.8
      - 12.9
      - 12.10
      - 12.11
      - 13.3
      - 13.4
      - 13.5
      - 13.6
      - 13.7
      - 14.1
      - 14.2
      - 14.3
      - 14.4
  DBName:
    Type: String
    MaxLength: 64
    MinLength: 0
    AllowedPattern: ^[a-zA-Z0-9]*$
  DBPraefectName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$
    MinLength: 0
    MaxLength: 64
  DBUserName:
    Type: String
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]*$
    MinLength: 1
    MaxLength: 16
  DBPort:
    Type: Number
    MinValue: 1150
    MaxValue: 65535
  AuroraDBInstanceClass:
    Type: String
  RDSDBInstanceClass:
    Type: String
  UsingAurora:
    Type: String
    AllowedValues: ['Yes', 'No']

# Quickstart location Parameters
  QSS3BucketName:
    Type: String
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
  QSS3BucketRegion:
    Type: String
  QSS3KeyPrefix:
    Type: String
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
  UsingAurora: !Equals [!Ref UsingAurora, 'Yes']
  UsingRDS: !Equals [!Ref UsingAurora, 'No']

Resources:

# Database security groups
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to database port.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: !Ref VPCCIDR
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
          IpProtocol: tcp
      VpcId: !Ref VPCID
      Tags:
      - Key: Name
        Value: !Sub RDSSecurityGroup-${AWS::StackName}
  RDSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt DatabaseSecurityGroup.GroupId
      IpProtocol: -1
      SourceSecurityGroupId: !Ref DatabaseSecurityGroup
      Description: Self Reference

# PostgreSQL Password

  GitLabDBPassword:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/secrets/gitlab-db-password
      Description: GitLab DB password.
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBUserName}"}'
        GenerateStringKey: password
        PasswordLength: 30
        ExcludeCharacters: "\"@/\\'"
        RequireEachIncludedType: True

  PraefectDBPassword:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      Name: !Sub /quickstart/gitlab/${EnvironmentName}/secrets/praefect-db-password
      Description: Praefect DB password.
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBUserName}"}'
        GenerateStringKey: password
        PasswordLength: 30
        ExcludeCharacters: "\"@/\\'"
        RequireEachIncludedType: True

  GitLabAuroraDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: UsingAurora
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-postgresql/templates/aurora_postgres.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBEngineVersion: !Ref AuroraDBEngineVersion
        DBInstanceClass: !Ref AuroraDBInstanceClass
        DBName: !Ref DBName
        DBMasterUsername: !Sub '{{resolve:secretsmanager:${GitLabDBPassword}:SecretString:username}}'
        DBMasterUserPassword: !Sub '{{resolve:secretsmanager:${GitLabDBPassword}:SecretString:password}}'
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref Subnet1ID
        Subnet2ID: !Ref Subnet2ID
        CustomDBSecurityGroup: !GetAtt DatabaseSecurityGroup.GroupId

  PraefectAuroraDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: UsingAurora
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-postgresql/templates/aurora_postgres.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBEngineVersion: !Ref AuroraDBEngineVersion
        DBInstanceClass: !Ref AuroraDBInstanceClass
        DBName: !Ref DBPraefectName
        DBMasterUsername: !Sub '{{resolve:secretsmanager:${PraefectDBPassword}:SecretString:username}}'
        DBMasterUserPassword: !Sub '{{resolve:secretsmanager:${PraefectDBPassword}:SecretString:password}}'
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref Subnet1ID
        Subnet2ID: !Ref Subnet2ID
        CustomDBSecurityGroup: !GetAtt DatabaseSecurityGroup.GroupId

  GitLabRDSDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: UsingRDS
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-rds-postgres/templates/postgres-entrypoint-existing-vpc.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBEngineVersion: !Ref RDSDBEngineVersion
        DBInstanceClass: !Ref RDSDBInstanceClass
        DBName: !Ref DBName
        DBUsername: !Sub '{{resolve:secretsmanager:${GitLabDBPassword}:SecretString:username}}'
        DBPassword: !Sub '{{resolve:secretsmanager:${GitLabDBPassword}:SecretString:password}}'
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref Subnet1ID
        Subnet2ID: !Ref Subnet2ID
        CustomDBSecurityGroup: !GetAtt DatabaseSecurityGroup.GroupId

  PraefectRDSDatabase:
    Type: AWS::CloudFormation::Stack
    Condition: UsingRDS
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-rds-postgres/templates/postgres-entrypoint-existing-vpc.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBEngineVersion: !Ref RDSDBEngineVersion
        DBInstanceClass: !Ref RDSDBInstanceClass
        DBName: !Ref DBPraefectName
        DBUsername: !Sub '{{resolve:secretsmanager:${PraefectDBPassword}:SecretString:username}}'
        DBPassword: !Sub '{{resolve:secretsmanager:${PraefectDBPassword}:SecretString:password}}'
        DBPort: !Ref DBPort
        VPCID: !Ref VPCID
        Subnet1ID: !Ref Subnet1ID
        Subnet2ID: !Ref Subnet2ID
        CustomDBSecurityGroup: !GetAtt DatabaseSecurityGroup.GroupId

Outputs:
  DatabaseSecretName:
    Value: !Ref GitLabDBPassword
  PraefectSecretName:
    Value: !Ref PraefectDBPassword
  GitLabEndpointAddress:
    Value: !If [UsingAurora, !GetAtt GitLabAuroraDatabase.Outputs.RDSEndPointAddress, !GetAtt GitLabRDSDatabase.Outputs.RDSEndPointAddress]
  GitLabReadEndpointAddress:
    Value: !If [UsingAurora, !GetAtt GitLabAuroraDatabase.Outputs.RDSReadEndPointAddress, !GetAtt GitLabRDSDatabase.Outputs.RDSEndPointAddress]
  PraefectEndpointAddress:
    Value: !If [UsingAurora, !GetAtt PraefectAuroraDatabase.Outputs.RDSEndPointAddress, !GetAtt PraefectRDSDatabase.Outputs.RDSEndPointAddress]
