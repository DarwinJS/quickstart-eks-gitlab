AWSTemplateFormatVersion: 2010-09-09
Description: Gitlab post-install configuration
Parameters:
  ClusterName:
    Type: String
  HelmChartNamespace:
    Type: String
  HelmChartName:
    Type: String
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  EnvironmentName:
    Type: String 

Conditions:
  RegisterDns: !Not [!Equals [!Ref HostedZoneId, '']]

Resources:

  # 0. Retrieve value of rails secret and store it in Secrets Manager
  RailsSecretQuery:
    Type: AWSQS::Kubernetes::Get
    # E3001 Invalid or unsupported Type AWSQS::Kubernetes::Get
    Metadata: { cfn-lint: { config: { ignore_checks: [E3001] } } }
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: !Ref HelmChartNamespace
      Name: !Sub 'secret/${HelmChartName}-rails-secret'
      JsonPath: '{.data}'
  RailsSecret:
    Type: AWS::SecretsManager::Secret
    Metadata: { cfn-lint: { config: { ignore_checks: [E1010] } } }
    Properties:
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/secrets/rails'
      Description: "GitLab Rails Secret"
      SecretString: !GetAtt RailsSecretQuery.Response

  # 1. Retrieve value of root rassword secret and store it in Secrets Manager
  InitialRootPasswordQuery:
    Type: AWSQS::Kubernetes::Get
    # E3001 Invalid or unsupported Type AWSQS::Kubernetes::Get
    Metadata: { cfn-lint: { config: { ignore_checks: [E3001] } } }
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: !Ref HelmChartNamespace
      Name: !Sub 'secret/${HelmChartName}-gitlab-initial-root-password'
      JsonPath: '{.data.password}'
  InitialRootPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Metadata: { cfn-lint: { config: { ignore_checks: [E1010] } } }
    Properties:
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/secrets/initial-root-password'
      Description: "GitLab Initial Root Password"
      SecretString: !GetAtt InitialRootPasswordQuery.Response

  # 2. Retrieve load balancer URL and store as SSM parameter
  LoadBalancerQuery:
    Type: AWSQS::Kubernetes::Get
    # E3001 Invalid or unsupported Type AWSQS::Kubernetes::Get
    Metadata: { cfn-lint: { config: { ignore_checks: [E3001] } } }
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: !Ref HelmChartNamespace
      Name: !Sub 'service/${HelmChartName}-nginx-ingress-controller'
      JsonPath: '{.status.loadBalancer.ingress[0].hostname}'
  LoadBalancerParameter:
    Type: AWS::SSM::Parameter
    Metadata: { cfn-lint: { config: { ignore_checks: [E1010] } } }
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/loadbalancer'
      Value: !GetAtt LoadBalancerQuery.Response

  # 3. Add DNS records to enable routing to GitLab
  GitLabDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: RegisterDns
    Metadata: { cfn-lint: { config: { ignore_checks: [E1010] } } }
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Comment: DNS name for GitLab Web service.
      Name: !Sub "gitlab.${DomainName}"
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt  LoadBalancerQuery.Response
  RegistryDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: RegisterDns
    Metadata: { cfn-lint: { config: { ignore_checks: [E1010] } } }
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Comment: DNS name for GitLab Registry service.
      Name: !Sub "registry.${DomainName}"
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt  LoadBalancerQuery.Response

  # 4. Store cluster name as SSM parameter
  ClusterNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/cluster/name'
      Value: !Ref ClusterName